--Creating VM through another existing VM via Snapshot in Azure Tenant via PowerShell 


--Project Details
--Cloud Connect Consult (3C) Project
--Prepared by GS
--Email 			      : CloudConnectConsult@Outlook.com  
--Start Date		    :  11/13/2021 08:54 AM	(MM/DD/YYYY HH:MM AM/PM)
--Date Completion	  :  11/13/2021 12:04 PM :  AM	(MM/DD/YYYY HH:MM AM/PM)


--Another way to create a virtual machine is to create a snapshot of an exisitng vm
--convert that snapshot into an OS disk.
--Than deploy a new virtual machine, based on the newly created os disk.

--Before Snapshoting a virtal machine, there are few variable need to be set
--It will be used later  
--ResourceGroupName
--Location
--VMName
--Snapshotname

-Step#1, setting up variables 

PS C:\WINDOWS\system32> $resgrpnm = "VmLab13Nov"
PS C:\WINDOWS\system32> $loc = "EastUS"
PS C:\WINDOWS\system32> $VMname = "myVM13"
PS C:\WINDOWS\system32> $Snapname ="ss13nov"
 

#step2, retrive the configuration of source vm into a variable
"$svm" , once that is stored, it will be used to create Snapshot configuration and Snapshot itself

--Type the following , hit enter
$svm = Get-AzVM -ResourceGroupName "VmLab13Nov" -Name myVM13

--Powershell output
PS C:\WINDOWS\system32> $svm = Get-AzVM -ResourceGroupName "VmLab13Nov" -Name myVM13
PS C:\WINDOWS\system32>

--No message, non eventful

#step3, Now that we have requisite variables and Source VM configuration in a variable
--Lets create a snapshot variable for configuration

$snapshot = New-AzSnapshotConfig `
-SourceUri $svm.StorageProfile.OsDisk.ManagedDisk.Id `
-Location  $loc `
-CreateOption copy

--PowerShell output

PS C:\WINDOWS\system32> $snapshot = New-AzSnapshotConfig `
>> -SourceUri $svm.StorageProfile.OsDisk.ManagedDisk.Id `
>> -Location  $loc `
>> -CreateOption copy
PS C:\WINDOWS\system32>


Step#4 Now that we have created a snapshot variable, lets create an actual snapshot 
--Please note, Snapshot's are taken of OS disk, not the entire VM

--Type the following command and Hit Enter, 
--Snapshot switch takes the configuration of the snapshot
--Snapshotname switch takes name of the Snapshot you have decided

New-AzSnapshot `
-Snapshot $snapshot `
-Snapshotname  $Snapname `
-ResourceGroupName $resgrpnm

--Powershell Output

PS C:\WINDOWS\system32> New-AzSnapshot `
>> -Snapshot $snapshot `
>> -Snapshotname  $Snapname `
>> -ResourceGroupName $resgrpnm

ResourceGroupName            : VmLab13Nov
ManagedBy                    :
Sku                          : Microsoft.Azure.Management.Compute.Models.SnapshotSku
TimeCreated                  : 13-11-2021 09:55:56
OsType                       : Windows
HyperVGeneration             : V1
CreationData                 : Microsoft.Azure.Management.Compute.Models.CreationData
DiskSizeGB                   : 127
DiskSizeBytes                : 136367308800
UniqueId                     : 621b9bf8-1da5-4b00-8f13-575fccbc14f2
EncryptionSettingsCollection :
ProvisioningState            : Succeeded
Incremental                  : False
Encryption                   : Microsoft.Azure.Management.Compute.Models.Encryption
Id                           : /subscriptions/1cf519ce-949e-4f6f-a344-86903e66968e/resourceGroups/VmLab13Nov/providers/
                               Microsoft.Compute/snapshots/ss13nov
Name                         : ss13nov
Type                         : Microsoft.Compute/snapshots
Location                     : eastus
ExtendedLocation             :
Tags                         : {}
NetworkAccessPolicy          : AllowAll
DiskAccessId                 :
PurchasePlan                 :
SupportsHibernation          :

PS C:\WINDOWS\system32>


--Type the following command to get the snapshot details from the resource group

Get-AzSnhot -ResourceGroupName "VmLab13apsNov" -Snapshotname "ss13nov"


--Powershell output

PS C:\WINDOWS\system32> Get-AzSnapshot -ResourceGroupName "VmLab13Nov" -Snapshotname "ss13nov"

ResourceGroupName            : VmLab13Nov
ManagedBy                    :
Sku                          : Microsoft.Azure.Management.Compute.Models.SnapshotSku
TimeCreated                  : 13-11-2021 04:25:56
OsType                       : Windows
HyperVGeneration             : V1
CreationData                 : Microsoft.Azure.Management.Compute.Models.CreationData
DiskSizeGB                   : 127
DiskSizeBytes                : 136367308800
UniqueId                     : 621b9bf8-1da5-4b00-8f13-575fccbc14f2
EncryptionSettingsCollection :
ProvisioningState            : Succeeded
Incremental                  : False
Encryption                   : Microsoft.Azure.Management.Compute.Models.Encryption
Id                           : /subscriptions/1cf519ce-949e-4f6f-a344-86903e66968e/resourceGroups/VmLab13Nov/providers/Micros
                               oft.Compute/snapshots/ss13nov
Name                         : ss13nov
Type                         : Microsoft.Compute/snapshots
Location                     : eastus
ExtendedLocation             :
Tags                         : {}
NetworkAccessPolicy          : AllowAll
DiskAccessId                 :
PurchasePlan                 :
SupportsHibernation          :


PS C:\WINDOWS\system32>

--Please note, you can not deploy a VM directly from a snapshot
--you need to create a disk from snapshot first, step to be followed

-1- Load variables
-2- Initialize configuration
-3- Deploy new VM


step#1 Load the snapshot confirguration into a variable for VM, type the following and hit enter

$snapshotconfig  =  Get-AzSnapshot -ResourceGroupName "VmLab13Nov" -Snapshotname "ss13nov"

PS C:\WINDOWS\system32> $snapshotconfig  =  Get-AzSnapshot -ResourceGroupName "VmLab13Nov" -Snapshotname "ss13nov"
PS C:\WINDOWS\system32>

--Non eventful , no message

--Now create a disk configuration and load that into a seperate variable

$diskconfig  = New-AzDiskConfig -location $snapshotconfig.Location -SourceResourceId $snapshotconfig.Id -CreateOption Copy

--Powershell output

PS C:\WINDOWS\system32> $diskconfig  = New-AzDiskConfig -location $snapshotconfig.Location -SourceResourceId $snapshotconfig.Id -CreateOption Copy
PS C:\WINDOWS\system32>

--Non eventful, no message

--Once We have loaded disk configuration
--Let's create new os disk resource, based on the disk confriguration resource 

Type the following

$newOsDisk = New-AzDisk -Disk $diskconfig -ResourceGroupName "VmLab13Nov" -DiskName "newVmOSDisk"

--Powershell output

PS C:\WINDOWS\system32> $newOsDisk = New-AzDisk -Disk $diskconfig -ResourceGroupName "VmLab13Nov" -DiskName "newVmOSDisk"
PS C:\WINDOWS\system32>

--Non eventful, no message


--To check disk status

Get-AZDisk command

PS C:\WINDOWS\system32> Get-AzDisk -ResourceGroupName "Vmlab13Nov"


ResourceGroupName            : Vmlab13Nov
ManagedBy                    : /subscriptions/1cf519ce-949e-4f6f-a344-86903e66968e/resourceGroups/VmLab13Nov/providers/Micros
                               oft.Compute/virtualMachines/myVM13
ManagedByExtended            : {}
Sku                          : Microsoft.Azure.Management.Compute.Models.DiskSku
Zones                        :
TimeCreated                  : 13-11-2021 03:28:20
OsType                       : Windows
HyperVGeneration             : V1
CreationData                 : Microsoft.Azure.Management.Compute.Models.CreationData
DiskSizeGB                   : 127
DiskSizeBytes                : 136367308800
UniqueId                     : b3f07209-3d3b-4204-9bf9-67367e973422
EncryptionSettingsCollection :
ProvisioningState            : Succeeded
DiskIOPSReadWrite            : 500
DiskMBpsReadWrite            : 100
DiskIOPSReadOnly             :
DiskMBpsReadOnly             :
DiskState                    : Reserved
Encryption                   : Microsoft.Azure.Management.Compute.Models.Encryption
MaxShares                    :
ShareInfo                    : {}
Id                           : /subscriptions/1cf519ce-949e-4f6f-a344-86903e66968e/resourceGroups/Vmlab13Nov/providers/Micros
                               oft.Compute/disks/myVM13_OsDisk_1_b3f072093d3b42049bf967367e973422
Name                         : myVM13_OsDisk_1_b3f072093d3b42049bf967367e973422
Type                         : Microsoft.Compute/disks
Location                     : eastus
ExtendedLocation             :
Tags                         : {}
NetworkAccessPolicy          : AllowAll
DiskAccessId                 :
Tier                         : P10
BurstingEnabled              :
PurchasePlan                 :
SupportsHibernation          :
SecurityProfile              :

ResourceGroupName            : Vmlab13Nov
ManagedBy                    :
ManagedByExtended            : {}
Sku                          : Microsoft.Azure.Management.Compute.Models.DiskSku
Zones                        :
TimeCreated                  : 13-11-2021 05:09:41
OsType                       : Windows
HyperVGeneration             : V1
CreationData                 : Microsoft.Azure.Management.Compute.Models.CreationData
DiskSizeGB                   : 127
DiskSizeBytes                : 136367308800
UniqueId                     : eda17cf5-787f-4acd-ade6-20392a698095
EncryptionSettingsCollection :
ProvisioningState            : Succeeded
DiskIOPSReadWrite            : 500
DiskMBpsReadWrite            : 60
DiskIOPSReadOnly             :
DiskMBpsReadOnly             :
DiskState                    : Unattached
Encryption                   : Microsoft.Azure.Management.Compute.Models.Encryption
MaxShares                    :
ShareInfo                    : {}
Id                           : /subscriptions/1cf519ce-949e-4f6f-a344-86903e66968e/resourceGroups/Vmlab13Nov/providers/Micros
                               oft.Compute/disks/newVmOSDisk
Name                         : newVmOSDisk
Type                         : Microsoft.Compute/disks
Location                     : eastus
ExtendedLocation             :
Tags                         : {}
NetworkAccessPolicy          : AllowAll
DiskAccessId                 :
Tier                         :
BurstingEnabled              :
PurchasePlan                 :
SupportsHibernation          :
SecurityProfile              :



PS C:\WINDOWS\system32>



--Initialize a virtual machine, that is going to be deployed by our snapshot
--Load VM configuration
--Add Disk to configuration
--Network information need to be added to VM


--Create a new VM configuration, it will create base configuration for virtual machine

$vm = New-AzVMConfig -VmName "my13novSvr" -VMSize "Standard_DS2_v2"

--Powershell output

PS C:\WINDOWS\system32> $vm = New-AzVMConfig -VmName "my13novSvr" -VMSize "Standard_DS2_v2"
PS C:\WINDOWS\system32>

--Start the OS disk

$vm = Set-AzVMOSDisk -VM $vm -ManagedDiskId $newOsDisk.Id -CreateOption Attach -Windows

PS C:\WINDOWS\system32> $vm = Set-AzVMOSDisk -VM $vm -ManagedDiskId $newOsDisk.Id -CreateOption Attach -Windows
PS C:\WINDOWS\system32>

--Now we have a VM Configuration with OS disk attached to It

--create public ip address for this new vm

$pip = New-AzVMPublicIpA$pip = New-AzPublicIpAddress -Name 'myServerPip' -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location -AllocationMethod Dynamic

--Powershell output and warning`

PS C:\WINDOWS\system32> $pip = New-AzPublicIpAddress -Name 'myServerPip' -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location -AllocationMethod Dynamic
WARNING: Upcoming breaking changes in the cmdlet 'New-AzPublicIpAddress' :
Default behaviour of Zone will be changed
Cmdlet invocation changes :
    Old Way : Sku = Standard means the Standard Public IP is zone-redundant.
    New Way : Sku = Standard and Zone = {} means the Standard Public IP has no zones. If you want to create a zone-redundant
Public IP address, please specify all the zones in the region. For example, Zone = ['1', '2', '3'].
Note : Go to https://aka.ms/azps-changewarnings for steps to suppress this breaking change warning, and other information on
breaking changes in Azure PowerShell.
PS C:\WINDOWS\system32>

--Lets create Network Resource 

$vnet = Get-AzVirtualNetwork -Name 'myVnetms' -ResourceGroupName "Vmlab13Nov"

PS C:\WINDOWS\system32> $vnet = Get-AzVirtualNetwork -Name 'myVnetms' -ResourceGroupName "Vmlab13Nov"
PS C:\WINDOWS\system32>

--Create NIC for our new VM

$nic = New-AzNetworkInterface -Name 'myServiceNic' -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location  `
-Subnetid $vnet.Subnets[0].Id -PublicIpAddressid  $pip.Id 

PS C:\WINDOWS\system32> $nic = New-AzNetworkInterface -Name 'myServiceNic' -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location  `
>> -Subnetid $vnet.Subnets[0].Id -PublicIpAddressid  $pip.Id
PS C:\WINDOWS\system32>


--Attach the created Network Interface into the $vm configuration

$vm = Add-AzVMNetworkInterface -VM $vm -Id $nic.Id

PS C:\WINDOWS\system32> $vm = Add-AzVMNetworkInterface -VM $vm -Id $nic.Id
PS C:\WINDOWS\system32>


--Create new Azure Vm commmand 

New-AzVm -VM $vm -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location

PS C:\WINDOWS\system32> New-AzVm -VM $vm -ResourceGroupName "Vmlab13Nov" -Location $snapshotconfig.location
WARNING: Since the VM is created using premium storage or managed disk, existing standard storage account, gsstore1eastus, is
 used for boot diagnostics.

RequestId IsSuccessStatusCode StatusCode ReasonPhrase
--------- ------------------- ---------- ------------
                         True         OK OK

PS C:\WINDOWS\system32>

--Get the status of new VM

Get-AzVm -ResourceGroupName "Vmlab13Nov"

PS C:\WINDOWS\system32> Get-AzVm -ResourceGroupName "Vmlab13Nov" -Name "my13Novsvr" -status


ResourceGroupName          : Vmlab13Nov
Name                       : my13Novsvr
ComputerName               : myVM13
OsName                     : Windows Server 2016 Datacenter
OsVersion                  : 10.0.14393.4770
HyperVGeneration           : V1
BootDiagnostics            :
  ConsoleScreenshotBlobUri : https://gsstore1eastus.blob.core.windows.net/bootdiagnostics-my13novsv-3b55636a-f1a4-4921-aa9d-f
ad7c0dc6d82/my13novSvr.3b55636a-f1a4-4921-aa9d-fad7c0dc6d82.screenshot.bmp
  SerialConsoleLogBlobUri  : https://gsstore1eastus.blob.core.windows.net/bootdiagnostics-my13novsv-3b55636a-f1a4-4921-aa9d-f
ad7c0dc6d82/my13novSvr.3b55636a-f1a4-4921-aa9d-fad7c0dc6d82.serialconsole.log
Disks[0]                   :
  Name                     : newVmOSDisk
  Statuses[0]              :
    Code                   : ProvisioningState/succeeded
    Level                  : Info
    DisplayStatus          : Provisioning succeeded
    Time                   : 13-11-2021 06:12:21
Extensions[0]              :
  Name                     : BGInfo
  Type                     : Microsoft.Compute.BGInfo
  TypeHandlerVersion       : 2.1
  Statuses[0]              :
    Code                   : ProvisioningState/succeeded
    Level                  : Info
    DisplayStatus          : Provisioning succeeded
    Message                : Plugin enabled (handler name: Microsoft.Compute.BGInfo, extension name: , version: 2.1).
VMAgent                    :
  VmAgentVersion           : 2.7.41491.1029
  ExtensionHandlers[0]     :
    Type                   : Microsoft.Compute.BGInfo
    TypeHandlerVersion     : 2.1
    Status                 :
      Code                 : ProvisioningState/succeeded
      Level                : Info
      DisplayStatus        : Ready
      Message              : Plugin enabled (handler name: Microsoft.Compute.BGInfo, extension name: , version: 2.1).
  Statuses[0]              :
    Code                   : ProvisioningState/succeeded
    Level                  : Info
    DisplayStatus          : Ready
    Message                : GuestAgent is running and processing the extensions.
    Time                   : 13-11-2021 06:16:35
Statuses[0]                :
  Code                     : ProvisioningState/succeeded
  Level                    : Info
  DisplayStatus            : Provisioning succeeded
  Time                     : 13-11-2021 06:13:44
Statuses[1]                :
  Code                     : PowerState/running
  Level                    : Info
  DisplayStatus            : VM running



PS C:\WINDOWS\system32>



-----Once your lap practice is Done 
Remove the complete resource group to avoid getting charged

PS C:\WINDOWS\system32> Remove-AzResourceGroup -Name "VMLab13nov" -Force
True
PS C:\WINDOWS\system32>



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~End Of File~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Let's Make World a better place to work !